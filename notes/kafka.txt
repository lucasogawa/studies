Benefícios:
	- distribuída (paralelismo do mesmo tópico)
	- sequencial (hash para cair no mesmo bloco)
	- garantia de mensagens

Conceitos:
	- Evento (Mensagem)
	- Tópico
	- Partições
	- Produtor (Publisher)
	- Consumidor (Subscriber)

	- 1 Publisher e 2 Subscriber (2 grupos de consumo)
	- Não adianta ter 2 Subscriber se houver somente uma partição
	- Chave decide em qual partição vai cair

Comandos:
	- Iniciar Zookeeper:
		bin/zookeeper-server-start.sh config/zookeeper.properties

	- Iniciar Kafka:
		bin/kafka-server-start.sh config/server.properties

	- Criar Topic:
		bin/kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic STORE_NEW_ORDER

	- Ver Topics:
		bin/kafka-topics.sh --list --bootstrap-server localhost:9092
		bin/kafka-topics.sh --describe --bootstrap-server localhost:9092

	- Acessar Topic (Producer):Z
		bin/kafka-console-producer.sh --broker-list localhost:9092 --topic STORE_NEW_ORDER

	- Acessar Topic (Subscriber):
		bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic STORE_NEW_ORDER --from-beginning

	- Alterar configuração dos Tópicos:
		vim config/server.properties

	- Alterar configuração de partição dos Tópicos:
			ERRO: bin/kafka-topics.sh --alter --zookeeper localhost:2181 --topic ECOMMERCE_NEW_ORDER --partitions 3
		bin/kafka-topics.sh --alter --bootstrap-server localhost:9092 --topic ECOMMERCE_NEW_ORDER --partitions 3

	- Ver Grupos de Consumo:
		bin/kafka-consumer-groups.sh --describe --all-groups --bootstrap-server localhost:9092